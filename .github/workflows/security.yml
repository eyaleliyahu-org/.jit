name: Workflows generated by the MVS plan
on:
  workflow_dispatch:
    inputs:
       client_payload:
          description: The Client payload
          required: true
jobs:
  secret-detection:
    if: contains( fromJSON(github.event.inputs.client_payload).payload.control_ids, 'ba097cc5-4f5c-4f6d-997a-9558f4ff2731') || fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'secret-detection'
    runs-on: ubuntu-latest
    steps:
    - name: secrets-detection
      uses: jitsecurity-controls/jit-github-action@v1.6
      with:
        docker_user: jit-bot
        docker_password: ${{fromJSON(github.event.inputs.client_payload).payload.container_registry_token}}
        security_control: ghcr.io/jitsecurity-controls/control-gitleaks-alpine:latest
        security_control_args: detect --config /config/gitleaks.toml --source /code -v --report-format json --report-path /tmp/report.json --redact --no-git --exit-code 0
        security_control_output_file: /tmp/report.json
        dispatch_type: workflow

  static-code-analysis-python:
    if: contains( fromJSON(github.event.inputs.client_payload).payload.control_ids, '544911b5-b570-44e2-96ca-41036a5074ff') || fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'static-code-analysis-python'
    runs-on: ubuntu-latest
    steps:
    - name: python-code-scanning
      uses: jitsecurity-controls/jit-github-action@v1.6
      with:
        docker_user: jit-bot
        docker_password: ${{fromJSON(github.event.inputs.client_payload).payload.container_registry_token}}
        security_control: ghcr.io/jitsecurity-controls/control-bandit-slim:latest
        security_control_args: -r /code -f json -q -lll -iii
        security_control_output_file: /tmp/report.json
        dispatch_type: workflow

  static-code-analysis-js:
    if: contains( fromJSON(github.event.inputs.client_payload).payload.control_ids, '3be2887f-aebc-4d57-8247-343e93b5625e') || fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'static-code-analysis-js'
    runs-on: ubuntu-latest
    steps:
    - name: semgrep-code-scanning
      uses: jitsecurity-controls/jit-github-action@v1.6
      with:
        docker_user: jit-bot
        docker_password: ${{fromJSON(github.event.inputs.client_payload).payload.container_registry_token}}
        security_control: ghcr.io/jitsecurity-controls/control-semgrep-alpine:latest
        security_control_args: --json --config=/semgrep-config.yml --metrics=off --severity=ERROR /code
        
        dispatch_type: workflow

  static-code-analysis-go:
    if: contains( fromJSON(github.event.inputs.client_payload).payload.control_ids, '47b3a8fe-f91c-4a4d-82f6-ee7ead1fe6bb') || fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'static-code-analysis-go'
    runs-on: ubuntu-latest
    steps:
    - name: golang-code-scanning
      uses: jitsecurity-controls/jit-github-action@v1.6
      with:
        docker_user: jit-bot
        docker_password: ${{fromJSON(github.event.inputs.client_payload).payload.container_registry_token}}
        security_control: ghcr.io/jitsecurity-controls/control-gosec-alpine:latest
        security_control_args: -fmt=json -severity=high /code/...
        
        dispatch_type: workflow

  iac-misconfig-detection:
    if: contains( fromJSON(github.event.inputs.client_payload).payload.control_ids, '21d1b8e9-68bc-4b5b-85b8-2cfd37423471') || fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'iac-misconfig-detection'
    runs-on: ubuntu-latest
    steps:
    - name: cloud-infrastructure-misconfiguration
      uses: jitsecurity-controls/jit-github-action@v1.6
      with:
        docker_user: jit-bot
        docker_password: ${{fromJSON(github.event.inputs.client_payload).payload.container_registry_token}}
        security_control: ghcr.io/jitsecurity-controls/control-kics-alpine:latest
        security_control_args: scan -p /code -o /code/jit-report -f json --exclude-severities INFO,MEDIUM,LOW --disable-secrets
        security_control_output_file: /code/jit-report/results.json
        dispatch_type: workflow

  remediation-pr:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'remediation-pr'
    runs-on: ubuntu-latest
    steps:
    - name: remediation-pr
      uses: jitsecurity-controls/jit-github-action@v1.6
      with:
        docker_user: jit-bot
        docker_password: ${{fromJSON(github.event.inputs.client_payload).payload.container_registry_token}}
        security_control: ghcr.io/jitsecurity-controls/open-remediation-pr-alpine:latest
        security_control_args: --github-token ${{fromJSON(github.event.inputs.client_payload).payload.github_token}} --fix-pr-config ${{fromJSON(github.event.inputs.client_payload).payload.fix_pr_config}}
        security_control_output_file: /tmp/report.json
        dispatch_type: workflow
